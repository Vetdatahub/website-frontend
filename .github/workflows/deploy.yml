name: VetDataHub Frontend Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Archive production files
        run: |
          tar -czf vetdatahub-frontend.tar.gz .next package.json package-lock.json public
      - name: Upload build artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: vetdatahub-frontend
          path: vetdatahub-frontend.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'Vetdatahub/website-frontend'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: vetdatahub-frontend
      - name: Copy files to DigitalOcean droplet
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          source: "vetdatahub-frontend.tar.gz"
          target: ${{ secrets.DO_DEPLOY_PATH }}

      - name: SSH and deploy
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          script: |
            # Install Node.js via nvm if not already installed
            if ! command -v node &> /dev/null; then
              # Download and install nvm
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
              # Load nvm
              \. "$HOME/.nvm/nvm.sh"
              # Download and install Node.js 22
              nvm install 22
              nvm use 22
            else
              # Load nvm if it exists (for existing installations)
              [ -s "$HOME/.nvm/nvm.sh" ] && \. "$HOME/.nvm/nvm.sh"
            fi
            
            cd ${{ secrets.DO_DEPLOY_PATH }}
            tar -xzf vetdatahub-frontend.tar.gz
            rm vetdatahub-frontend.tar.gz
            npm install --production
            # Install PM2 if not already installed
            npm install -g pm2
            # Restart your app using PM2
            pm2 restart vetdatahub-frontend || pm2 start npm --name "vetdatahub-frontend" -- start
