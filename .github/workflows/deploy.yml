name: Next.js (CI + Deploy with rsync)

on:
  pull_request:
    branches: [ "main" ]
    paths: [ "apps/next/**" ]
  push:
    branches: [ "main" ]
    paths: [ "apps/next/**" ]

env:
  NODE_VERSION: "20"
  WORKDIR: .
  APP_DIR: ${{ secrets.NEXT_APP_DIR }}   # e.g. /var/www/next/app
  SERVICE_NAME: nextjs
  HOST: ${{ secrets.DO_HOST }}
  USER: ${{ secrets.DO_USER }}

jobs:
  quality:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ${{ env.WORKDIR }} } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run lint
      - run: npm test -- --ci --passWithNoTests
      - run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: quality
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Upload project (rsync overwrite)
        uses: burnett01/rsync-deployments@7.0.0
        with:
          switches: -az --delete --exclude=".git" --exclude="node_modules" --exclude=".next"
          path: ${{ env.WORKDIR }}/
          remote_path: ${{ env.APP_DIR }}/
          remote_host: ${{ env.HOST }}
          remote_user: ${{ env.USER }}
          remote_key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

      - name: Install deps, build, restart (on droplet)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd "${{ env.APP_DIR }}"
            if command -v pnpm >/dev/null 2>&1; then PKG=pnpm; elif command -v yarn >/dev/null 2>&1; then PKG=yarn; else PKG=npm; fi
            $PKG install --production=false
            $PKG run build
            sudo systemctl restart "${{ env.SERVICE_NAME }}"
            sudo systemctl status --no-pager "${{ env.SERVICE_NAME }}" | head -n 20
