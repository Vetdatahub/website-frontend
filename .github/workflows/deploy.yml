name: Deploy Next.js to Droplet (systemd, upload build)

on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-prod
  cancel-in-progress: true


jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      WORKDIR: .   # change to apps/web if monorepo

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKDIR }}/package-lock.json

      - name: Install & build
        working-directory: ${{ env.WORKDIR }}
        run: |
          npm ci
          npm run build

      - name: Verify build outputs
        working-directory: ${{ env.WORKDIR }}
        run: |
          test -d .next || (echo ".next not found (build failed or wrong WORKDIR)"; exit 1)
          ls -la .next | head -n 50

      - name: Upload build artifacts to Droplet
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          overwrite: true
          # Use either comma-separated…
          source: ${{ env.WORKDIR }}/.next/**,${{ env.WORKDIR }}/public/**,${{ env.WORKDIR }}/package.json,${{ env.WORKDIR }}/package-lock.json,${{ env.WORKDIR }}/next.config.js
          # …or multi-line (both work with this action)
          # source: |
          #   ${{ env.WORKDIR }}/.next/**
          #   ${{ env.WORKDIR }}/public/**
          #   ${{ env.WORKDIR }}/package.json
          #   ${{ env.WORKDIR }}/package-lock.json
          #   ${{ env.WORKDIR }}/next.config.js
          target: /var/www/nextapp

      - name: Configure systemd & start (prod deps only)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_NAME=nextapp
            APP_DIR=/var/www/nextapp
            NODE_MAJOR=20
            PORT=3000
            ENV_PATH=/etc/${APP_NAME}.env

            # Ensure Node on server
            if ! command -v node >/dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_${NODE_MAJOR}.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Optional env file from secret
            if [ -n "${{ secrets.ENV_FILE || '' }}" ]; then
              echo "${{ secrets.ENV_FILE }}" | sudo tee "$ENV_PATH" >/dev/null
            fi

            cd "$APP_DIR"
            npm ci --omit=dev

            SERVICE_FILE="/etc/systemd/system/${APP_NAME}.service"
            sudo tee "$SERVICE_FILE" >/dev/null <<EOF
            [Unit]
            Description=Next.js app - ${APP_NAME}
            After=network.target

            [Service]
            Type=simple
            WorkingDirectory=${APP_DIR}
            EnvironmentFile=-${ENV_PATH}
            Environment=NODE_ENV=production
            Environment=PORT=${PORT}
            ExecStart=/usr/bin/npm run start
            Restart=always
            RestartSec=5
            User=${USER}
            Group=${USER}
            StandardOutput=journal
            StandardError=journal

            [Install]
            WantedBy=multi-user.target
            EOF

            sudo systemctl daemon-reload
            sudo systemctl enable "${APP_NAME}.service"
            sudo systemctl restart "${APP_NAME}.service"
            sudo systemctl is-active "${APP_NAME}.service"
            echo "✅ ${APP_NAME} running on port ${PORT}"
